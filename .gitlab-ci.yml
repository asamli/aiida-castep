image: 
  name: bonanzhu/aiida_core_base:0.12.2-dev

stages:
  - test
  - deploy

before_script:
    - apt-get update
    - apt-get install make
    # Disable interactive configuration of tzdata
    #- DEBIAN_FRONTEND=noninteractive apt-get install -y postgresql-all 
    #- apt-get install -y mlocate && updatedb
    - export HOME=/home/aiida
    - export PATH=$HOME/.local/bin:$PATH
    - pip install --upgrade --user pip
    - pip install sphinx sphinx_rtd_theme twine
    - pip install --user .
    - reentry scan -r aiida
    - python setup.py sdist bdist_wheel

pytest_tests:
  stage: test
  variables:
    DB_HOST: "postgres"
  services:
    - postgres:10
  script:
    - pip install --user pytest
    - su -c '/home/aiida/.local/bin/pytest aiida_castep/tests' aiida

doc_build:
  stage: test
  variables:
    DB_HOST: "postgres"
  services:
    - postgres:10
  script:
    # The profile needs to be there for the building of docs
    - TEST_AIIDA_BACKEND="django" bash .ci-data/setup_profiles.sh
    - cd docs
    - make
    
db_tests:
  stage: test
  variables:
    DB_HOST: "postgres"
  services:
    - postgres:10
  script:
    - TEST_AIIDA_BACKEND="django" bash .ci-data/setup_profiles.sh
    - verdi -p test_django devel tests db.castep
    - TEST_AIIDA_BACKEND="sqlalchemy" bash .ci-data/setup_profiles.sh
    - verdi -p test_sqlalchemy devel tests db.castep

stage_production:
  stage: deploy
  variables:
    TWINE_USERNAME: $STAGE_USERNAME
    TWINE_PASSWORD: $STAGE_PASSWORD
  script:
    - twine upload --repository-url $PACKAGR_REPOSITORY_URL dist/*
  except:
    - tags

deploy_production:
  stage: deploy
  variables:
    TWINE_USERNAME: $PRODUCTION_USERNAME
    TWINE_PASSWORD: $PRODUCTION_PASSWORD
  script:
    - twine upload dist/*
  only:
    - tags
